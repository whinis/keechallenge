<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{904EDA59-83D9-45BC-9835-8358EDD2E0EF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>KeeChallenge</RootNamespace>
    <AssemblyName>KeeChallenge</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x86\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>bin\x86\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x64\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\x64\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="KeePass, Version=2.38.0.21288, Culture=neutral, PublicKeyToken=fed2ed7716aecf5c, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\KeePassSource\Build\KeePass\Debug\KeePass.exe</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="KeyCreation.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="KeyCreation.Designer.cs">
      <DependentUpon>KeyCreation.cs</DependentUpon>
    </Compile>
    <Compile Include="KeeChallenge.cs" />
    <Compile Include="KeeChallengeExt.cs" />
    <Compile Include="KeyEntry.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="KeyEntry.Designer.cs">
      <DependentUpon>KeyEntry.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="RecoveryMode.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="RecoveryMode.Designer.cs">
      <DependentUpon>RecoveryMode.cs</DependentUpon>
    </Compile>
    <Compile Include="YubiPrompt.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Include="YubiPrompt.Designer.cs">
      <DependentUpon>YubiPrompt.cs</DependentUpon>
    </Compile>
    <Compile Include="YubiWrapper.cs" />
    <EmbeddedResource Include="KeyCreation.resx">
      <DependentUpon>KeyCreation.cs</DependentUpon>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="KeyEntry.resx">
      <DependentUpon>KeyEntry.cs</DependentUpon>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <EmbeddedResource Include="RecoveryMode.resx">
      <DependentUpon>RecoveryMode.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Include="YubiPrompt.resx">
      <DependentUpon>YubiPrompt.cs</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="ClassDiagram1.cd" />
    <None Include="ClassDiagram2.cd" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <PostBuildEvent>
	echo POSTBUILDSTEP for $(ProjectName)

	set KPDir=C:Program FilesKeePass Password Safe 2
	set KPPDir=%25KPDir%25plugins
	set KPPTempDir=%25KPPDir%25$(ProjectName)

	IF NOT "$(ConfigurationName)"=="Debug" Goto :NotDebug
	REM In debug mode we want to move the generated DLLs and PDBs to the plugins
	REM directory so we can easily set breakpoints, etc.
	REM In this case, we don't care if the Firefox add-on has missing or outdated
	REM files (they are only used at install time so it won't affect debugging)

	REM delete the PLGX from any previous Release build
	del /Q "%25KPPDir%25$(ProjectName).plgx"
	if errorlevel 1 goto BuildEventFailed
	echo Release plgx deleted

	REM copy output DLLs to KeePass plugins directory
	copy "$(ProjectName).dll" "%25KPPDir%25$(ProjectName).dll"
	if errorlevel 1 goto BuildEventFailed
	xcopy /i /e /s /y /f "dll\*" "%25KPPDir%25"
	if errorlevel 1 goto BuildEventFailed
	echo Debug DLLs copied to plugins directory

	goto BuildEventOK

	:NotDebug
	IF NOT "$(ConfigurationName)"=="Release" Goto :NotRelease
	REM In release mode we want to make sure that we are working with the PLGX version.
	REM For the KeeFox project we will be in this mode quite a lot (whenever working
	REM primarily on the Firefox add-on part of the project rather than KeeICE)

	REM delete the DLLs from any previous Debug build
	del /Q "%25KPPDir%25$(ProjectName).dll"
	if errorlevel 1 goto BuildEventFailed
	rmdir /S /Q "%25KPPDir%2532bit"
	if errorlevel 1 goto BuildEventFailed
	rmdir /S /Q "%25KPPDir%2564bit"
	if errorlevel 1 goto BuildEventFailed
	echo Debug DLLs deleted

	REM create temporary directory
	rmdir /S /Q "%25KPPTempDir%25"
	mkdir "%25KPPTempDir%25"
	if errorlevel 1 goto BuildEventFailed
	echo Temporary directory created

	REM copy relevant project files to temporary directory
	REM (for simple KeePass plugins you may need to
	REM copy only *.cs files and .csproj file)
	xcopy /i /e /s /y /f "dll\*" "%25KPPDir%25"
	if errorlevel 1 goto BuildEventFailed
	copy "$(ProjectDir)*.cs" "%25KPPTempDir%25"
	if errorlevel 1 goto BuildEventFailed
	copy "$(ProjectDir)$(ProjectName).csproj" "%25KPPTempDir%25$(ProjectName).csproj"
	if errorlevel 1 goto BuildEventFailed
	mkdir "%25KPPTempDir%25Properties"
	copy "$(ProjectDir)PropertiesAssemblyInfo.cs" "%25KPPTempDir%25PropertiesAssemblyInfo.cs"
	if errorlevel 1 goto BuildEventFailed
	mkdir "%25KPPTempDir%25generated"
	copy "$(ProjectDir)generatedKeeICE.cs" "%25KPPTempDir%25generatedKeeICE.cs"
	if errorlevel 1 goto BuildEventFailed
	echo Files copied to temporary directory

	REM create the PLGX
	"%25KPDir%25KeePass.exe" --plgx-create "%25KPPTempDir%25"
	if errorlevel 1 goto BuildEventFailed
	echo PLGX created

	REM delete the temporary directory and its contents
	rmdir /S /Q "%25KPPTempDir%25"
	if errorlevel 1 goto BuildEventFailed
	echo Temporary directory deleted

	goto BuildEventOK
	:NotReleasePlgx
	echo Invalid configuration selected. Please choose a different build configuration
	echo or modify the post-build script to add support for this configuration.

	:BuildEventFailed
	echo POSTBUILDSTEP for $(ProjectName) FAILED
	exit 1

	:BuildEventOK
	echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PostBuildEvent>
	echo POSTBUILDSTEP for $(ProjectName)

	set KPDir=Z:\Projects\Programming\KeePassBuild\KeePassSource\Build\KeePass\Debug
	set KPPDir=%25KPDir%25\Plugins
	set KPPTempDir=%25KPPDir%25\$(ProjectName)

	IF NOT "$(ConfigurationName)"=="Debug" Goto :NotDebug
	REM In debug mode we want to move the generated DLLs and PDBs to the plugins
	REM directory so we can easily set breakpoints, etc.
	REM In this case, we don't care if the Firefox add-on has missing or outdated
	REM files (they are only used at install time so it won't affect debugging)

	REM delete the PLGX from any previous Release build
	del  \q "%25KPPDir%25\$(ProjectName).plgx"
	if errorlevel 1 goto BuildEventFailed
	echo Release plgx deleted

	REM copy output DLLs to KeePass plugins directory
	copy "$(ProjectName).dll" "%25KPPDir%25\$(ProjectName).dll"
	if errorlevel 1 goto BuildEventFailed
                   xcopy /i /e /s /y /f "$(ProjectDir)32bit" "%25KPPDir%25\32bit"
                   if errorlevel 1 goto BuildEventFailed
                   xcopy /i /e /s /y /f "$(ProjectDir)64bit" "%25KPPDir%25\64bit"
                   if errorlevel 1 goto BuildEventFailed
	echo Debug DLLs copied to plugins directory

	goto BuildEventOK

	:NotDebug
	IF NOT "$(ConfigurationName)"=="Release" Goto :NotRelease
	REM In release mode we want to make sure that we are working with the PLGX version.
	REM For the KeeFox project we will be in this mode quite a lot (whenever working
	REM primarily on the Firefox add-on part of the project rather than KeeICE)

	REM delete the DLLs from any previous Debug build
	del /Q "%25KPPDir%25\$(ProjectName).dll"
	if errorlevel 1 goto BuildEventFailed
	rmdir /S /Q "%25KPPDir%25\32bit"
	if errorlevel 1 goto BuildEventFailed
	rmdir /S /Q "%25KPPDir%25\64bit"
	if errorlevel 1 goto BuildEventFailed
	echo Debug DLLs deleted

	REM copy relevant project files to temporary directory
	REM (for simple KeePass plugins you may need to
	REM copy only *.cs files and .csproj file)
                   rmdir /S /Q "$(SolutionDir)PlgxTemp"
                   if errorlevel 1 goto BuildEventFailed
                   mkdir "$(SolutionDir)PlgxTemp\"
                   if errorlevel 1 goto BuildEventFailed
	copy "$(ProjectDir)*.cs" "$(SolutionDir)PlgxTemp\"
                   if errorlevel 1 goto BuildEventFailed
	copy "$(ProjectDir)*.resx" "$(SolutionDir)PlgxTemp\"
	if errorlevel 1 goto BuildEventFailed
                  copy "$(ProjectDir)*.png" "$(SolutionDir)PlgxTemp\"
	if errorlevel 1 goto BuildEventFailed
                   copy "$(ProjectDir)PLGXUtil.exe" "$(SolutionDir)PlgxTemp\"
	if errorlevel 1 goto BuildEventFailed
                   copy "$(ProjectDir)KeeChallenge.dll.config" "$(SolutionDir)PlgxTemp\"
	if errorlevel 1 goto BuildEventFailed
	copy "$(ProjectDir)$(ProjectName).csproj" "$(SolutionDir)PlgxTemp\$(ProjectName).csproj"
	if errorlevel 1 goto BuildEventFailed
	mkdir "$(SolutionDir)PlgxTemp\Properties"
	copy "$(ProjectDir)Properties\*.cs" "$(SolutionDir)PlgxTemp\Properties\"
	if errorlevel 1 goto BuildEventFailed
                  copy "$(ProjectDir)Properties\*.resx" "$(SolutionDir)PlgxTemp\Properties\"
	if errorlevel 1 goto BuildEventFailed
                   xcopy /i /e /s /y /f "$(ProjectDir)32bit" "$(SolutionDir)PlgxTemp\32bit"
                   if errorlevel 1 goto BuildEventFailed
                   xcopy /i /e /s /y /f "$(ProjectDir)64bit" "$(SolutionDir)PlgxTemp\64bit"
                   if errorlevel 1 goto BuildEventFailed
	echo Files copied to temporary directory

	REM create the PLGX
	"%25KPDir%25\KeePass.exe" --plgx-create "$(SolutionDir)PlgxTemp" --plgx-build-post:"{PLGX_TEMP_DIR}PLGXUtil.exe {PLGX_TEMP_DIR} {PLGX_CACHE_DIR}"
	if errorlevel 1 goto BuildEventFailed
                  del "$(SolutionDir)KeeChallenge.plgx"
                  rename "$(SolutionDir)PlgxTemp.plgx" "KeeChallenge.plgx"
                  if errorlevel 1 goto BuildEventFailed
	echo PLGX created

                  copy "$(SolutionDir)KeeChallenge.plgx" "%25KPPDir%25" /Y
	if errorlevel 1 goto BuildEventFailed

	goto BuildEventOK
	:NotReleasePlgx
	echo Invalid configuration selected. Please choose a different build configuration
	echo or modify the post-build script to add support for this configuration.

	:BuildEventFailed
	echo POSTBUILDSTEP for $(ProjectName) FAILED
	exit 1

	:BuildEventOK
	echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>